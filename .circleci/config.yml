version: 2.1

jobs:
  build:

    docker:
      - image: circleci/buildpack-deps:trusty

    parameters:
      cache_layers:
        default: false
        type: boolean

    steps:

      - checkout

      - setup_remote_docker:
          docker_layer_caching: << parameters.cache_layers >>

      - run:
          name: Build and start the stack
          command: docker-compose -f docker-compose.yml up -d --build
          working_directory: scripts/spcgeonode/

      - run:
          name: Wait for everything to start...
          command: |
            n=1
            m=60
            until [ $n -gt $m ]
            do
              sleep 60
              DJANGO_STATUS=$(docker inspect --format="{{json .State.Health.Status}}" spcgeonode_django_1)
              GEOSERVER_STATUS=$(docker inspect --format="{{json .State.Health.Status}}" spcgeonode_geoserver_1)
              echo ""
              echo "Waited $n min (out of $m min)"
              echo "Django: $DJANGO_STATUS"
              echo "Geoserver: $GEOSERVER_STATUS"
              if [[ $DJANGO_STATUS == '"healthy"' ]] && [[ $GEOSERVER_STATUS == '"healthy"' ]]; then
                break
              fi
              echo "Not healthy yet..."
              docker ps
              n=$[$n+1]
            done
            [[ $DJANGO_STATUS == '"healthy"' ]] && [[ $GEOSERVER_STATUS == '"healthy"' ]];

      - run:
          name: Show state (debug)
          command: docker ps
          when: on_fail

      - run:
          name: Geoserver logs (debug)
          command: docker logs spcgeonode_geoserver_1 --tail 500
          when: on_fail

      - run:
          name: Django logs (debug)
          command: docker logs spcgeonode_django_1 --tail 500
          when: on_fail

      - run:
          name: Run test suite
          command: |
            docker-compose exec django bash -c 'python manage.py test $(python -c "import sys;from geonode import settings;sys.stdout.write('\'' '\''.join([a for a in settings.GEONODE_APPS]))")'
          working_directory: scripts/spcgeonode/

      # TODO : run integration tests too

workflows:

  commit:
    jobs:
      - build:
          cache_layers: true

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - spcgeonode-release
    jobs:
      - build:
          cache_layers: false
