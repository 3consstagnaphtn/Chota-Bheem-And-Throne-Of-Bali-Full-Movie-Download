{"version":3,"sources":["message_recipients_autocomplete.js"],"names":["get_users_data","data","objects","map","elem","value","username","id","get_groups_data","title","MessageRecipientsTags","input","data_extract_func","url","blacklist","tagName","type","Error","tagify","controller","Tagify","whitelist","on","_onInputHandler","bind","event","detail","settings","length","loading","dropdown","hide","call","fetch","then","response","json","res","splice","show","JSON","parse","filter","forEach","$","attr","name","appendTo","disabled"],"mappings":"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","sourcesContent":["function get_users_data(data) {\n    return data.objects.map((elem) => {\n        return {value: elem.username, id: elem.id};\n    });\n}\n\nfunction get_groups_data(data) {\n    return data.objects.map((elem) => {\n        return {value: elem.title, id: elem.id};\n    });\n}\n\nclass MessageRecipientsTags {\n    constructor(input, data_extract_func, url, blacklist=[]) {\n        if (input.tagName !== 'INPUT' || input.type !== 'text') {\n            throw Error('Base element should be <input type=\"text\">');\n        }\n        this.input = input;\n        this.tagify = null;\n        this.controller = null;\n        this.data_extract_func = data_extract_func;\n        this.url = url;\n        this.blacklist = blacklist;\n    }\n\n    init() {\n        this.tagify = new Tagify(this.input, {whitelist: [], blacklist: this.blacklist});\n        this.tagify.on('input', this._onInputHandler.bind(this));\n    }\n\n\n    _onInputHandler(event) {\n        const value = event.detail.value;\n        this.tagify.settings.whitelist.length = 0;\n\n        this.tagify.loading(true).dropdown.hide.call(this.tagify);\n\n        fetch(this.url + value).then(response =>\n            response.json()\n                .then(this.data_extract_func)\n                .then(res => {\n                    this.tagify.settings.whitelist.splice(0, res.length, ...res);\n                    this.tagify.loading(false).dropdown.show.call(this.tagify, value);\n                }));\n    }\n\n    fixOutputValue() {\n        if (this.input.value !== '') {\n            JSON.parse(this.input.value).filter(elem => 'id' in elem).forEach((elem) => {\n                $('<input>').attr({\n                    type: 'hidden',\n                    id: 'foo',\n                    name: this.input.name,\n                    value: elem.id\n                }).appendTo('form');\n            });\n        }\n        this.input.disabled = true;\n    }\n}\n\n"],"file":"message_recipients_autocomplete_es5.js"}